
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password_hash: 'password_hash',
  full_name: 'full_name',
  role: 'role',
  is_active: 'is_active',
  created_at: 'created_at'
};

exports.Prisma.PropertyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  location: 'location',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.LocalScalarFieldEnum = {
  id: 'id',
  property_id: 'property_id',
  reference_code: 'reference_code',
  floor: 'floor',
  unit_type: 'unit_type',
  size_m2: 'size_m2',
  status: 'status'
};

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  email: 'email',
  phone: 'phone',
  created_at: 'created_at'
};

exports.Prisma.LeaseScalarFieldEnum = {
  id: 'id',
  tenant_id: 'tenant_id',
  local_id: 'local_id',
  lease_reference: 'lease_reference',
  start_date: 'start_date',
  end_date: 'end_date',
  rent_amount: 'rent_amount',
  billing_cycle: 'billing_cycle',
  status: 'status'
};

exports.Prisma.PaymentModeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  display_name: 'display_name',
  requires_proof: 'requires_proof'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  lease_id: 'lease_id',
  amount: 'amount',
  paid_at: 'paid_at',
  payment_mode_id: 'payment_mode_id',
  reference: 'reference',
  status: 'status'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  owner_table: 'owner_table',
  owner_id: 'owner_id',
  file_key: 'file_key',
  filename: 'filename',
  doc_type: 'doc_type',
  uploaded_by: 'uploaded_by',
  uploaded_at: 'uploaded_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  recipient: 'recipient',
  subject: 'subject',
  message: 'message',
  status: 'status',
  sent_at: 'sent_at',
  retries: 'retries',
  created_at: 'created_at'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action',
  entity_table: 'entity_table',
  entity_id: 'entity_id',
  old_data: 'old_data',
  new_data: 'new_data',
  ip_address: 'ip_address',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER'
};

exports.LocalStatus = exports.$Enums.LocalStatus = {
  AVAILABLE: 'AVAILABLE',
  OCCUPIED: 'OCCUPIED',
  MAINTENANCE: 'MAINTENANCE'
};

exports.TenantType = exports.$Enums.TenantType = {
  INDIVIDUAL: 'INDIVIDUAL',
  COMPANY: 'COMPANY'
};

exports.LeaseStatus = exports.$Enums.LeaseStatus = {
  ACTIVE: 'ACTIVE',
  TERMINATED: 'TERMINATED'
};

exports.BillingCycle = exports.$Enums.BillingCycle = {
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  EMAIL: 'EMAIL',
  SMS: 'SMS',
  SYSTEM: 'SYSTEM'
};

exports.OwnerTable = exports.$Enums.OwnerTable = {
  LEASES: 'LEASES',
  PAYMENTS: 'PAYMENTS'
};

exports.Prisma.ModelName = {
  User: 'User',
  Property: 'Property',
  Local: 'Local',
  Tenant: 'Tenant',
  Lease: 'Lease',
  PaymentMode: 'PaymentMode',
  Payment: 'Payment',
  Document: 'Document',
  Notification: 'Notification',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ntgr/Desktop/This.Mac/MYPROJECT/RentMaster_properties/RentMaster/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/ntgr/Desktop/This.Mac/MYPROJECT/RentMaster_properties/RentMaster/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ngenerator erd {\n  provider = \"prisma-erd-generator\"\n  output   = \"./ERD.svg\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n/**\n * ---------- ENUMS ----------\n */\n\nenum UserRole {\n  ADMIN\n  MANAGER\n}\n\nenum LocalStatus {\n  AVAILABLE\n  OCCUPIED\n  MAINTENANCE\n}\n\nenum TenantType {\n  INDIVIDUAL\n  COMPANY\n}\n\nenum LeaseStatus {\n  ACTIVE\n  TERMINATED\n}\n\nenum BillingCycle {\n  MONTHLY\n  QUARTERLY\n}\n\nenum PaymentStatus {\n  PENDING\n  COMPLETED\n}\n\nenum NotificationType {\n  EMAIL\n  SMS\n  SYSTEM\n}\n\nenum OwnerTable {\n  LEASES\n  PAYMENTS\n}\n\n/**\n * ---------- MODELS ----------\n */\n\nmodel User {\n  id            String   @id @default(uuid()) @db.Uuid\n  email         String   @unique\n  password_hash String\n  full_name     String\n  role          UserRole\n  is_active     Boolean  @default(true)\n  created_at    DateTime @default(now())\n\n  documents  Document[] @relation(\"UploadedBy\")\n  audit_logs AuditLog[]\n\n  @@index([role])\n}\n\nmodel Property {\n  id          String   @id @default(uuid()) @db.Uuid\n  name        String\n  location    String\n  description String\n  created_at  DateTime @default(now())\n\n  locals Local[]\n}\n\nmodel Local {\n  id             String      @id @default(uuid()) @db.Uuid\n  property_id    String      @db.Uuid\n  reference_code String      @unique\n  floor          String?\n  unit_type      String?\n  size_m2        Float?\n  status         LocalStatus\n\n  property Property @relation(fields: [property_id], references: [id])\n  leases   Lease[]\n\n  @@index([property_id])\n}\n\nmodel Tenant {\n  id         String     @id @default(uuid()) @db.Uuid\n  name       String\n  type       TenantType\n  email      String?\n  phone      String?\n  created_at DateTime   @default(now())\n\n  leases Lease[]\n}\n\nmodel Lease {\n  id              String       @id @default(uuid()) @db.Uuid\n  tenant_id       String       @db.Uuid\n  local_id        String       @db.Uuid\n  lease_reference String       @unique\n  start_date      DateTime\n  end_date        DateTime?\n  rent_amount     Float\n  billing_cycle   BillingCycle\n  status          LeaseStatus\n\n  tenant    Tenant     @relation(fields: [tenant_id], references: [id])\n  local     Local      @relation(fields: [local_id], references: [id])\n  payments  Payment[]\n  documents Document[] @relation(\"LeaseDocuments\")\n\n  @@index([tenant_id])\n  @@index([local_id])\n}\n\nmodel PaymentMode {\n  id             String  @id @default(uuid()) @db.Uuid\n  code           String  @unique\n  display_name   String\n  requires_proof Boolean @default(false)\n\n  payments Payment[]\n}\n\nmodel Payment {\n  id              String        @id @default(uuid()) @db.Uuid\n  lease_id        String        @db.Uuid\n  amount          Float\n  paid_at         DateTime      @default(now())\n  payment_mode_id String        @db.Uuid\n  reference       String?\n  status          PaymentStatus\n\n  lease        Lease       @relation(fields: [lease_id], references: [id])\n  payment_mode PaymentMode @relation(fields: [payment_mode_id], references: [id])\n  documents    Document[]  @relation(\"PaymentDocuments\")\n\n  @@index([lease_id])\n  @@index([payment_mode_id])\n}\n\nmodel Document {\n  id          String     @id @default(uuid()) @db.Uuid\n  owner_table OwnerTable\n  owner_id    String     @db.Uuid\n  file_key    String\n  filename    String\n  doc_type    String\n  uploaded_by String     @db.Uuid\n  uploaded_at DateTime   @default(now())\n\n  uploaded_user User @relation(\"UploadedBy\", fields: [uploaded_by], references: [id])\n\n  // ✅ Unique foreign key constraint names\n  lease   Lease?   @relation(\"LeaseDocuments\", fields: [owner_id], references: [id], map: \"documents_owner_id_lease_fkey\")\n  payment Payment? @relation(\"PaymentDocuments\", fields: [owner_id], references: [id], map: \"documents_owner_id_payment_fkey\")\n\n  @@index([owner_table, owner_id])\n  @@map(\"documents\")\n}\n\nmodel Notification {\n  id         String           @id @default(uuid()) @db.Uuid\n  type       NotificationType\n  recipient  String\n  subject    String?\n  message    String\n  status     String\n  sent_at    DateTime?\n  retries    Int              @default(0)\n  created_at DateTime         @default(now())\n}\n\nmodel AuditLog {\n  id           String   @id @default(uuid()) @db.Uuid\n  user_id      String   @db.Uuid\n  action       String\n  entity_table String?\n  entity_id    String?  @db.Uuid\n  old_data     Json?\n  new_data     Json?\n  ip_address   String?\n  created_at   DateTime @default(now())\n\n  user User @relation(fields: [user_id], references: [id])\n\n  @@index([user_id])\n}\n",
  "inlineSchemaHash": "3f6c6d2956c6ebb6f5aa9218a575b6ed72967d4bc5693b474cdec0fac3d0080d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"full_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"UploadedBy\"},{\"name\":\"audit_logs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":null},\"Property\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"locals\",\"kind\":\"object\",\"type\":\"Local\",\"relationName\":\"LocalToProperty\"}],\"dbName\":null},\"Local\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"property_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"floor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size_m2\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LocalStatus\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"LocalToProperty\"},{\"name\":\"leases\",\"kind\":\"object\",\"type\":\"Lease\",\"relationName\":\"LeaseToLocal\"}],\"dbName\":null},\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TenantType\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leases\",\"kind\":\"object\",\"type\":\"Lease\",\"relationName\":\"LeaseToTenant\"}],\"dbName\":null},\"Lease\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenant_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"local_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lease_reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rent_amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"billing_cycle\",\"kind\":\"enum\",\"type\":\"BillingCycle\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeaseStatus\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"LeaseToTenant\"},{\"name\":\"local\",\"kind\":\"object\",\"type\":\"Local\",\"relationName\":\"LeaseToLocal\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"LeaseToPayment\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"LeaseDocuments\"}],\"dbName\":null},\"PaymentMode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"display_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requires_proof\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPaymentMode\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lease_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paid_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payment_mode_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"lease\",\"kind\":\"object\",\"type\":\"Lease\",\"relationName\":\"LeaseToPayment\"},{\"name\":\"payment_mode\",\"kind\":\"object\",\"type\":\"PaymentMode\",\"relationName\":\"PaymentToPaymentMode\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"PaymentDocuments\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner_table\",\"kind\":\"enum\",\"type\":\"OwnerTable\"},{\"name\":\"owner_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doc_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploaded_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploaded_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploaded_user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UploadedBy\"},{\"name\":\"lease\",\"kind\":\"object\",\"type\":\"Lease\",\"relationName\":\"LeaseDocuments\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentDocuments\"}],\"dbName\":\"documents\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"recipient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sent_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"retries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity_table\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"old_data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"new_data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

